addpath(genpath('PairWiseDistanceMetrics/')); 
addpath('../../../data'); 

esm_input_file = '../../../data/DIAN/esm_input_mat_files/20190815_dian_pup_abeta_prob_orig_method_longi2_t2_t3.mat'; 
[filepath,name,ext] = fileparts(esm_input_file);
output_dir = ['../../../data/DIAN/esm_output_mat_files/']; % output directory <-------------------------------- !!!
%% Loading data  ---------------------------------------------------------%
N_tau_possibilities = 1; % number of different Tau measurements <------ !!!
% loading tau presence Probabilities, using a global reference
roidata = load(esm_input_file);
ref_pattern(:,:,1) = roidata.v2; % in the interval [0 1]. <----------------- !!!
bl_pattern(:,:,1) = roidata.v1;
s_betas = roidata.betas;
s_deltas = roidata.deltas; 

AGEs = roidata.ages'; % ages of all subjects, for calculating onset ages' <----- !!!   

% Loading region-region connectivity information for defined atlas (e.g. DKT, Klein and Tourville Atlas [Frontiers in Neuroscience, 2012])
Conn_Matrix = roidata.ACP; % Connectivity matrix (Nr X Nr, a common template for all subjects, in this case)  <----- !!!  
%load('/home/users/llevitis/code/GreyMatterESM/connectivity_CMU60DSI/Matrix_LONG.mat');
Long_Matrix = roidata.LONG; % distance matrix (in mm)  <----- !!!  
Conn_Matrix = Conn_Matrix + eye(size(Conn_Matrix)); % adding self connections
Nnodes      = size(Conn_Matrix,1);

%% Default parameters:
speed_Matrix = (168e-6)/(1/((1e+3)*60*60*24*365)); % For amyloid-beta. Converting 168 (nm/ms) to mm/years % Effective diff. coefficient: (1.8*1e-6/(1.6)^2)/(1/(60*60*24*365)); % mm2/years (based on Jack Waters, PLoS One, 2010)
% speed_Matrix_min and speed_Matrix_max % changing tortuosity according to S. Hrab?etovï¿½a, C. Nicholson / Neurochemistry International 45 (2004).
% See also Nicholson et al., 2000, Progress in Brain Research, Vol 125.
Nparameters      = 3; % # parameters to estimate, i.e. production, clearance, noise level
time_range       = [0 50]; % in years
h_integration    = 7/365; % integration step in years (e.g. 1 day)
max_regions      = 2; % maximum number of initial seed regions
num_noise_levels = 1;
num_repetitions  = 1;

%[BETAS0,DELTAS0] = get_parameters_space(1e-1); % for quick exploration (delete this line and uncomment next one!!!)
[BETAS0,DELTAS0] = get_parameters_space(1e-2); % for 100 values (change this if further resolution is desired)
MUS0             = 0; % mean of the additive noise
max_sigma_value  = 0.1; % maximum std of the additive noise
SIGMAS0          = 0; % for quick exploration (delete this line and uncomment next one!!!)
%SIGMAS0          = 0:max_sigma_value/num_noise_levels:max_sigma_value; % std of the additive noise
Nsubjects        = size(ref_pattern,2); %

%% Selecting/evaluating automatically the "best" predictor model
for measure = 1:N_tau_possibilities
    disp(['Analysis for deposition measurement -> ' num2str(measure)]);
    
    % Literature-based models
    seed_regions_1 = [1 21 36 56];
        [model_solutions0,model_parameters0,model_times0,model_CORRs0,model_RMSEs0] = ...
        model_evaluation(Nnodes,Nsubjects,time_range,ref_pattern(:,:,measure),bl_pattern,...
        s_betas,s_deltas,h_integration,Conn_Matrix,Long_Matrix,num_repetitions,...
        Nparameters,BETAS0,DELTAS0,SIGMAS0,MUS0,seed_regions_1);

    
     model=1;
    
     BETAS0_est  = model_parameters0(1,:,model)';
     DELTAS0_est = model_parameters0(2,:,model)';
     SIGMAS_est  = model_parameters0(3,:,model)';
     AGEs = reshape(AGEs, [size(roidata.ages,2),model]); %based on n
     ONSETS_est(:,model) = AGEs - model_times0(:,model);
     BETAS_est(:,model)  = (exp(-BETAS0_est)+BETAS0_est-1)./BETAS0_est;
     DELTAS_est(:,model) = (1-exp(-DELTAS0_est))./DELTAS0_est;
    

    save([output_dir filesep name '_postcaudcing_' date '.mat'],'model_solutions0','model_parameters0','model_times0',...
             'model_CORRs0','model_RMSEs0','Nsubjects','time_range','ref_pattern','h_integration','Conn_Matrix',...
             'Long_Matrix','num_repetitions','Nparameters','BETAS0','DELTAS0','SIGMAS0','MUS0',...
             'AGEs', 'ONSETS_est');   %     Nmodels     = 0; % or define also any apriori model based in literature

end